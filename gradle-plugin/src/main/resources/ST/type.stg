type_api(type) ::= <<
name: <type:type_name()>
<if(type.inheritsFrom)>inherits_from: <type.inheritsFrom:type_name()><endif>
attributes:
<type.attributes:type_attribute()>
>>

type_attribute(attribute) ::= <<

- name: <attribute.name>
  type: <attribute.type:type_name()>
  description: <attribute.description>
>>

type_name(type) ::= <<
<type.apiDefinitionString>
>>

attribute_type_name(type) ::= <<
<type.apiDefinitionString><type.arrayDeclarationString>
>>

bean(type, imports) ::= <<
package <type.packageName>;

<imports:import_template()>

/**
 * This file was generated using Kordapt
 */

<type.annotations:annotation()>
public class <type.name><if(type.inheritsFrom)> extends <type.inheritsFrom.name><endif> {
<type.attributes:bean_attribute_definition()>

<type.attributes:bean_getter_setter()>

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;

        <type.name> <type.name; format="lower">= (<type.name>) o;

        <type.attributes:bean_attribute_equals(type)>
        return true;
    }

    @Override
    public int hashCode() {
        int result = 0;
        <type.attributes:bean_attribute_hashcode()>
        return result;
    }
}
>>

bean_attribute_definition(attribute) ::= <<

    private <attribute.type.declarationString> <attribute.name>;
>>

bean_getter_setter(attribute) ::= <<

    <attribute.annotations:annotation()>
    public <attribute.type.declarationString> get<attribute.capitalizedName>(){
        return <attribute.name>;
    }

    public void set<attribute.capitalizedName>(<attribute.type.declarationString> <attribute.name>){
        this.<attribute.name> = <attribute.name>;
    }


>>

bean_attribute_equals(attribute, type) ::= <<

if (<attribute.name>!= null ? !<attribute.name>.equals(<type.name; format="lower">.<attribute.name>) : <type.name; format="lower">.<attribute.name> != null) return false;
>>

bean_attribute_hashcode(attribute) ::= <<

result = 31 * result + (<attribute.name> != null ? <attribute.name>.hashCode() : 0);
>>


import_template(im) ::= <<
import <im>;

>>

annotation(a) ::= <<

@<a.name><if(a.annotationAttributes)>(<a.annotationAttributes.keys:{k | <k>="<a.annotationAttributes.(k)>"}; separator=", ">)<elseif(a.values)>({<a.values:{v | <v:annotation()>}; separator=",\n">})<else><a.value><endif>
>>