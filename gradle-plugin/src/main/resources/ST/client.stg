
import_template(im) ::= <<
import <im>;

>>




service_client(imports, packageName, service) ::= <<
package <packageName>;

import com.korwe.thecore.service.ping.PingServiceImpl;
<imports:import_template()>


/**
 * This file was generated using Kordapt
 **/

public class <service.name>Client extends AbstractServiceClient\<<service.name>MessageContext> implements <service.name>{

    public <service.name>Client(CoreClient coreClient) {
        super(coreClient, <service.name>.class);
    }

    <service.functions:service_client_function()>
    <service.functions:service_client_wrapper_function(service)>
}
>>

service_client_function(function) ::= <<


@Override
public <if(function.returnType)><function.returnType.declarationString><else>void<endif> <function.name>(<function.parameters:service_function_parameter(); separator=", ">){
    Map\<String, Object> params = new HashMap\<>();
    <if(function.parameters)>
    <function.parameters:request_param()>
    <endif>
    <if(function.returnType)>return (<function.returnType.declarationString>)makeDataRequest(newContext(), "<function.name>", params)<else>makeRequest( newContext(), "<function.name>", params)<endif>;
}
>>

service_client_wrapper_function(function, service) ::= <<


public <if(function.returnType)><function.returnType.declarationString><else>void<endif> <function.name>(<service.name>MessageContext msgContext<if(function.parameters)>, <function.parameters:service_function_parameter(); separator=", "><endif>){
    Map\<String, Object> params = new HashMap\<>();
    <if(function.parameters)>
    <function.parameters:request_param()>
    <endif>
    <if(function.returnType)>return (<function.returnType.declarationString>)makeDataRequest(msgContext, "<function.name>", params)<else>makeRequest(msgContext, "<function.name>", params)<endif>;
}
>>

service_function_parameter(parameter) ::= <<
<parameter.type.declarationString> <parameter.name>
>>

request_param(parameter) ::= <<
params.put("<parameter.name>", <parameter.name>);
>>


service_client_message_context(imports, service, packageName) ::= <<
package <packageName>;

<imports:import_template()>


/**
 * This file was generated using Kordapt
 */

public class <service.name>MessageContext extends AbstractAsyncMessageContext\<<service.name>Client, <service.name> > implements <service.name>{

    public <service.name>MessageContext(<service.name>Client serviceClient) {
        super(serviceClient);
    }

    <service.functions:service_client_message_context_function()>
}

>>

service_client_message_context_function(function) ::= <<

@Override
public <if(function.returnType)><function.returnType.declarationString><else>void<endif> <function.name>(<function.parameters:service_function_parameter(); separator=", ">){
    <if(function.returnType)>return (<function.returnType.declarationString>)<endif>delegate.<function.name>(this <if(function.parameters)>, <function.parameters:{p | <p.name>}; separator=", "><endif>);
}

>>
