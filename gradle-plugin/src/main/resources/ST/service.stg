
import_template(im) ::= <<
import <im>;

>>

service_interface(imports, packageName, service) ::= <<
package <packageName>;

import com.korwe.thecore.annotation.ParamNames;
import com.korwe.thecore.service.PingService;
<imports:import_template()>

/**
 * This file was generated using Kordapt
 */

public interface <service.name> extends PingService{
    <service.functions:service_interface_function()>
}
>>

service_interface_function(function) ::= <<


<if(function.parameters)>
@ParamNames(<function.paramNamesString>)
<endif>
public <if(function.returnType)><function.returnType.name><else>void<endif> <function.name>(<function.parametersString>);
>>


service_impl(imports, packageName, service) ::= <<
package <packageName>;

import com.korwe.thecore.service.ping.PingServiceImpl;
<imports:import_template()>


/**
 * This file was generated using Kordapt
 */

public class <service.name>Impl extends PingServiceImpl implements <service.name>{
    <service.functions:service_impl_function()>
}
>>

service_impl_function(function) ::= <<


    @Override
    public <if(function.returnType)><function.returnType.name><else>void<endif> <function.name>(<function.parametersString>){
        //TODO: Implement function <function.name>
        <if(function.returnType)>return null;<endif>
    }
>>

service_adapter(packageName, imports, service) ::= <<
package <packageName>;

import com.korwe.thecore.service.GenericCoreService;
import com.thoughtworks.xstream.XStream;
<imports:import_template()>

/**
 * This file was generated using Kordapt
 */
public class Core<service.name> extends GenericCoreService\<<service.name>\>{
    public Core<service.name>(<service.name> delegate, String serviceName, int maxThreads) {
        super(delegate, serviceName, maxThreads);
    }

    public Core<service.name>(<service.name> delegate, String serviceName, int maxThreads, XStream xStream) {
        super(delegate, serviceName, maxThreads, xStream);
    }
}

>>

service_api(service) ::= <<
name: <service.name>
functions:
<service.functions:service_api_function()>
>>

service_api_function(function) ::= <<

- name: <function.name>
  description: <function.description>
  <if(function.parameters)>parameters:
<function.parameters:service_api_function_parameter()>
  <endif>
  <if(function.returnType)>return_type: <function.returnType.name>
  <endif>
>>

service_api_function_parameter(parameter) ::= <<

- name: <parameter.name>
  type: <parameter.type>
  description: Description required
>>

core_config() ::= <<
\<?xml version="1.0" encoding="UTF-8" standalone="no"?>
\<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
\<properties>
    \<comment>TheCore config file\</comment>
    \<entry key="amqp_server">localhost\</entry>
    \<entry key="amqp_port">5672\</entry>
    \<entry key="amqp_vhost">/\</entry>
    \<entry key="amqp_password">guest\</entry>
    \<entry key="scxml_path">core_session.scxml\</entry>
    \<entry key="processor_type">com.korwe.thecore.session.BasicMessageProcessor\</entry>
    \<entry key="timeout_seconds">99999999\</entry>
    \<entry key="amqp_user">guest\</entry>
    \<entry key="session_message_filter">#\</entry>
    \<entry key="max_threads">3\</entry>
\</properties>
>>